{
  "contractName": "USDT",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DECIMALS",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MILLION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SYMBOL",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MILLION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/yxf/app/uniarts-eth-dao/contracts/ERC20/USDT.sol\":\"USDT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/yxf/app/uniarts-eth-dao/contracts/ERC20/USDT.sol\":{\"keccak256\":\"0x33cdbe9d16064352e13c0598ffa283b14bcb1730286fe65a68b1b96e5faf7f60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4f367ee40b26477a2b3abf5058611b4e6244209cb999bed3e69187963701d71\",\"dweb:/ipfs/QmXR7ZdrNnJBCGdUTKFHChA97hc1fX8L2KdZoac1jYCP8o\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80633950935111610097578063a457c2d711610066578063a457c2d7146102b5578063a9059cbb146102e5578063dd62ed3e14610315578063f76f8d781461034557610100565b8063395093511461021957806370a082311461024957806395d89b4114610279578063a3f4df7e1461029757610100565b80632e0f2625116100d35780632e0f2625146101a15780632ff2e9dc146101bf578063313ce567146101dd57806332bc934c146101fb57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610363565b60405161011a9190610fe9565b60405180910390f35b61013d60048036038101906101389190610e37565b6103f5565b60405161014a9190610fce565b60405180910390f35b61015b610413565b60405161016891906110eb565b60405180910390f35b61018b60048036038101906101869190610de8565b61041d565b6040516101989190610fce565b60405180910390f35b6101a9610515565b6040516101b69190611106565b60405180910390f35b6101c761051a565b6040516101d491906110eb565b60405180910390f35b6101e5610548565b6040516101f29190611106565b60405180910390f35b610203610551565b60405161021091906110eb565b60405180910390f35b610233600480360381019061022e9190610e37565b610573565b6040516102409190610fce565b60405180910390f35b610263600480360381019061025e9190610d83565b61061f565b60405161027091906110eb565b60405180910390f35b610281610667565b60405161028e9190610fe9565b60405180910390f35b61029f6106f9565b6040516102ac9190610fe9565b60405180910390f35b6102cf60048036038101906102ca9190610e37565b610732565b6040516102dc9190610fce565b60405180910390f35b6102ff60048036038101906102fa9190610e37565b61081d565b60405161030c9190610fce565b60405180910390f35b61032f600480360381019061032a9190610dac565b61083b565b60405161033c91906110eb565b60405180910390f35b61034d6108c2565b60405161035a9190610fe9565b60405180910390f35b606060038054610372906113e6565b80601f016020809104026020016040519081016040528092919081815260200182805461039e906113e6565b80156103eb5780601f106103c0576101008083540402835291602001916103eb565b820191906000526020600020905b8154815290600101906020018083116103ce57829003601f168201915b5050505050905090565b60006104096104026108fb565b8484610903565b6001905092915050565b6000600254905090565b600061042a848484610ace565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104756108fb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ec9061106b565b60405180910390fd5b610509856105016108fb565b858403610903565b60019150509392505050565b601281565b601260ff16600a61052b91906111e6565b620f42406105399190611304565b60646105459190611304565b81565b60006012905090565b601260ff16600a61056291906111e6565b620f42406105709190611304565b81565b60006106156105806108fb565b84846001600061058e6108fb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610610919061113d565b610903565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054610676906113e6565b80601f01602080910402602001604051908101604052809291908181526020018280546106a2906113e6565b80156106ef5780601f106106c4576101008083540402835291602001916106ef565b820191906000526020600020905b8154815290600101906020018083116106d257829003601f168201915b5050505050905090565b6040518060400160405280600981526020017f555344542054455354000000000000000000000000000000000000000000000081525081565b600080600160006107416108fb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156107fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f5906110cb565b60405180910390fd5b6108126108096108fb565b85858403610903565b600191505092915050565b600061083161082a6108fb565b8484610ace565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040518060400160405280600481526020017f555344540000000000000000000000000000000000000000000000000000000081525081565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610973576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096a906110ab565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109da9061102b565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610ac191906110eb565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b359061108b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba59061100b565b60405180910390fd5b610bb9838383610d4f565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c369061104b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd2919061113d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d3691906110eb565b60405180910390a3610d49848484610d54565b50505050565b505050565b505050565b600081359050610d68816116bd565b92915050565b600081359050610d7d816116d4565b92915050565b600060208284031215610d9557600080fd5b6000610da384828501610d59565b91505092915050565b60008060408385031215610dbf57600080fd5b6000610dcd85828601610d59565b9250506020610dde85828601610d59565b9150509250929050565b600080600060608486031215610dfd57600080fd5b6000610e0b86828701610d59565b9350506020610e1c86828701610d59565b9250506040610e2d86828701610d6e565b9150509250925092565b60008060408385031215610e4a57600080fd5b6000610e5885828601610d59565b9250506020610e6985828601610d6e565b9150509250929050565b610e7c81611370565b82525050565b6000610e8d82611121565b610e97818561112c565b9350610ea78185602086016113b3565b610eb081611476565b840191505092915050565b6000610ec860238361112c565b9150610ed382611494565b604082019050919050565b6000610eeb60228361112c565b9150610ef6826114e3565b604082019050919050565b6000610f0e60268361112c565b9150610f1982611532565b604082019050919050565b6000610f3160288361112c565b9150610f3c82611581565b604082019050919050565b6000610f5460258361112c565b9150610f5f826115d0565b604082019050919050565b6000610f7760248361112c565b9150610f828261161f565b604082019050919050565b6000610f9a60258361112c565b9150610fa58261166e565b604082019050919050565b610fb98161139c565b82525050565b610fc8816113a6565b82525050565b6000602082019050610fe36000830184610e73565b92915050565b600060208201905081810360008301526110038184610e82565b905092915050565b6000602082019050818103600083015261102481610ebb565b9050919050565b6000602082019050818103600083015261104481610ede565b9050919050565b6000602082019050818103600083015261106481610f01565b9050919050565b6000602082019050818103600083015261108481610f24565b9050919050565b600060208201905081810360008301526110a481610f47565b9050919050565b600060208201905081810360008301526110c481610f6a565b9050919050565b600060208201905081810360008301526110e481610f8d565b9050919050565b60006020820190506111006000830184610fb0565b92915050565b600060208201905061111b6000830184610fbf565b92915050565b600081519050919050565b600082825260208201905092915050565b60006111488261139c565b91506111538361139c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561118857611187611418565b5b828201905092915050565b6000808291508390505b60018511156111dd578086048111156111b9576111b8611418565b5b60018516156111c85780820291505b80810290506111d685611487565b945061119d565b94509492505050565b60006111f18261139c565b91506111fc8361139c565b92506112297fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611231565b905092915050565b60008261124157600190506112fd565b8161124f57600090506112fd565b8160018114611265576002811461126f5761129e565b60019150506112fd565b60ff84111561128157611280611418565b5b8360020a91508482111561129857611297611418565b5b506112fd565b5060208310610133831016604e8410600b84101617156112d35782820a9050838111156112ce576112cd611418565b5b6112fd565b6112e08484846001611193565b925090508184048111156112f7576112f6611418565b5b81810290505b9392505050565b600061130f8261139c565b915061131a8361139c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561135357611352611418565b5b828202905092915050565b60006113698261137c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156113d15780820151818401526020810190506113b6565b838111156113e0576000848401525b50505050565b600060028204905060018216806113fe57607f821691505b6020821081141561141257611411611447565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b60008160011c9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6116c68161135e565b81146116d157600080fd5b50565b6116dd8161139c565b81146116e857600080fd5b5056fea2646970667358221220bd6229a23098ea9a2cd106f7244279f7f70629e8b71f9667a242ba955add96f764736f6c63430008040033",
  "immutableReferences": {},
  "sourceMap": "114:520:1:-:0;;;548:84;;;;;;;;;;568:4;;;;;;;;;;;;;;;;;574:6;;;;;;;;;;;;;;;;;1980:5:27;1972;:13;;;;;;;;;;;;:::i;:::-;;2005:7;1995;:17;;;;;;;;;;;;:::i;:::-;;1906:113;;592:33:1::1;598:10;348:2;427:17;;421:2;:23;;;;:::i;:::-;412:5;:33;;;;:::i;:::-;527:3;:13;;;;:::i;:::-;592:5;;;:33;;:::i;:::-;114:520:::0;;8254:389:27;8356:1;8337:21;;:7;:21;;;;8329:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8405:49;8434:1;8438:7;8447:6;8405:20;;;:49;;:::i;:::-;8481:6;8465:12;;:22;;;;;;;:::i;:::-;;;;;;;;8519:6;8497:9;:18;8507:7;8497:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8561:7;8540:37;;8557:1;8540:37;;;8570:6;8540:37;;;;;;:::i;:::-;;;;;;;;8588:48;8616:1;8620:7;8629:6;8588:19;;;:48;;:::i;:::-;8254:389;;:::o;10916:121::-;;;;:::o;11625:120::-;;;;:::o;114:520:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:366:43:-;149:3;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;246:93;335:3;246:93;:::i;:::-;364:2;359:3;355:12;348:19;;153:220;;;:::o;379:118::-;466:24;484:5;466:24;:::i;:::-;461:3;454:37;444:53;;:::o;503:419::-;669:4;707:2;696:9;692:18;684:26;;756:9;750:4;746:20;742:1;731:9;727:17;720:47;784:131;910:4;784:131;:::i;:::-;776:139;;674:248;;;:::o;928:222::-;1021:4;1059:2;1048:9;1044:18;1036:26;;1072:71;1140:1;1129:9;1125:17;1116:6;1072:71;:::i;:::-;1026:124;;;;:::o;1156:169::-;1240:11;1274:6;1269:3;1262:19;1314:4;1309:3;1305:14;1290:29;;1252:73;;;;:::o;1331:305::-;1371:3;1390:20;1408:1;1390:20;:::i;:::-;1385:25;;1424:20;1442:1;1424:20;:::i;:::-;1419:25;;1578:1;1510:66;1506:74;1503:1;1500:81;1497:2;;;1584:18;;:::i;:::-;1497:2;1628:1;1625;1621:9;1614:16;;1375:261;;;;:::o;1642:848::-;1703:5;1710:4;1734:6;1725:15;;1758:5;1749:14;;1772:712;1793:1;1783:8;1780:15;1772:712;;;1888:4;1883:3;1879:14;1873:4;1870:24;1867:2;;;1897:18;;:::i;:::-;1867:2;1947:1;1937:8;1933:16;1930:2;;;2362:4;2355:5;2351:16;2342:25;;1930:2;2412:4;2406;2402:15;2394:23;;2442:32;2465:8;2442:32;:::i;:::-;2430:44;;1772:712;;;1715:775;;;;;;;:::o;2496:285::-;2556:5;2580:23;2598:4;2580:23;:::i;:::-;2572:31;;2624:27;2642:8;2624:27;:::i;:::-;2612:39;;2670:104;2707:66;2697:8;2691:4;2670:104;:::i;:::-;2661:113;;2562:219;;;;:::o;2787:1073::-;2841:5;3032:8;3022:2;;3053:1;3044:10;;3055:5;;3022:2;3081:4;3071:2;;3098:1;3089:10;;3100:5;;3071:2;3167:4;3215:1;3210:27;;;;3251:1;3246:191;;;;3160:277;;3210:27;3228:1;3219:10;;3230:5;;;3246:191;3291:3;3281:8;3278:17;3275:2;;;3298:18;;:::i;:::-;3275:2;3347:8;3344:1;3340:16;3331:25;;3382:3;3375:5;3372:14;3369:2;;;3389:18;;:::i;:::-;3369:2;3422:5;;;3160:277;;3546:2;3536:8;3533:16;3527:3;3521:4;3518:13;3514:36;3496:2;3486:8;3483:16;3478:2;3472:4;3469:12;3465:35;3449:111;3446:2;;;3602:8;3596:4;3592:19;3583:28;;3637:3;3630:5;3627:14;3624:2;;;3644:18;;:::i;:::-;3624:2;3677:5;;3446:2;3717:42;3755:3;3745:8;3739:4;3736:1;3717:42;:::i;:::-;3702:57;;;;3791:4;3786:3;3782:14;3775:5;3772:25;3769:2;;;3800:18;;:::i;:::-;3769:2;3849:4;3842:5;3838:16;3829:25;;2847:1013;;;;;;:::o;3866:348::-;3906:7;3929:20;3947:1;3929:20;:::i;:::-;3924:25;;3963:20;3981:1;3963:20;:::i;:::-;3958:25;;4151:1;4083:66;4079:74;4076:1;4073:81;4068:1;4061:9;4054:17;4050:105;4047:2;;;4158:18;;:::i;:::-;4047:2;4206:1;4203;4199:9;4188:20;;3914:300;;;;:::o;4220:77::-;4257:7;4286:5;4275:16;;4265:32;;;:::o;4303:320::-;4347:6;4384:1;4378:4;4374:12;4364:22;;4431:1;4425:4;4421:12;4452:18;4442:2;;4508:4;4500:6;4496:17;4486:27;;4442:2;4570;4562:6;4559:14;4539:18;4536:38;4533:2;;;4589:18;;:::i;:::-;4533:2;4354:269;;;;:::o;4629:180::-;4677:77;4674:1;4667:88;4774:4;4771:1;4764:15;4798:4;4795:1;4788:15;4815:180;4863:77;4860:1;4853:88;4960:4;4957:1;4950:15;4984:4;4981:1;4974:15;5001:102;5043:8;5090:5;5087:1;5083:13;5062:34;;5052:51;;;:::o;5109:181::-;5249:33;5245:1;5237:6;5233:14;5226:57;5215:75;:::o;114:520:1:-;;;;;;;",
  "deployedSourceMap": "114:520:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4181:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3172:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4814:478;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;315:35:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;486:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3021:91:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;378:67:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5687:212:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3336:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2295:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;168:41:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6386:405:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3664:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3894:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;242:38:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2084:98:27;2138:13;2170:5;2163:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;:::o;4181:166::-;4264:4;4280:39;4289:12;:10;:12::i;:::-;4303:7;4312:6;4280:8;:39::i;:::-;4336:4;4329:11;;4181:166;;;;:::o;3172:106::-;3233:7;3259:12;;3252:19;;3172:106;:::o;4814:478::-;4950:4;4966:36;4976:6;4984:9;4995:6;4966:9;:36::i;:::-;5013:24;5040:11;:19;5052:6;5040:19;;;;;;;;;;;;;;;:33;5060:12;:10;:12::i;:::-;5040:33;;;;;;;;;;;;;;;;5013:60;;5111:6;5091:16;:26;;5083:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5196:57;5205:6;5213:12;:10;:12::i;:::-;5246:6;5227:16;:25;5196:8;:57::i;:::-;5281:4;5274:11;;;4814:478;;;;;:::o;315:35:1:-;348:2;315:35;:::o;486:54::-;348:2;427:17;;421:2;:23;;;;:::i;:::-;412:5;:33;;;;:::i;:::-;527:3;:13;;;;:::i;:::-;486:54;:::o;3021:91:27:-;3079:5;3103:2;3096:9;;3021:91;:::o;378:67:1:-;348:2;427:17;;421:2;:23;;;;:::i;:::-;412:5;:33;;;;:::i;:::-;378:67;:::o;5687:212:27:-;5775:4;5791:80;5800:12;:10;:12::i;:::-;5814:7;5860:10;5823:11;:25;5835:12;:10;:12::i;:::-;5823:25;;;;;;;;;;;;;;;:34;5849:7;5823:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;5791:8;:80::i;:::-;5888:4;5881:11;;5687:212;;;;:::o;3336:125::-;3410:7;3436:9;:18;3446:7;3436:18;;;;;;;;;;;;;;;;3429:25;;3336:125;;;:::o;2295:102::-;2351:13;2383:7;2376:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2295:102;:::o;168:41:1:-;;;;;;;;;;;;;;;;;;;:::o;6386:405:27:-;6479:4;6495:24;6522:11;:25;6534:12;:10;:12::i;:::-;6522:25;;;;;;;;;;;;;;;:34;6548:7;6522:34;;;;;;;;;;;;;;;;6495:61;;6594:15;6574:16;:35;;6566:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6685:67;6694:12;:10;:12::i;:::-;6708:7;6736:15;6717:16;:34;6685:8;:67::i;:::-;6780:4;6773:11;;;6386:405;;;;:::o;3664:172::-;3750:4;3766:42;3776:12;:10;:12::i;:::-;3790:9;3801:6;3766:9;:42::i;:::-;3825:4;3818:11;;3664:172;;;;:::o;3894:149::-;3983:7;4009:11;:18;4021:5;4009:18;;;;;;;;;;;;;;;:27;4028:7;4009:27;;;;;;;;;;;;;;;;4002:34;;3894:149;;;;:::o;242:38:1:-;;;;;;;;;;;;;;;;;;;:::o;587:96:38:-;640:7;666:10;659:17;;587:96;:::o;9962:370:27:-;10110:1;10093:19;;:5;:19;;;;10085:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10190:1;10171:21;;:7;:21;;;;10163:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10272:6;10242:11;:18;10254:5;10242:18;;;;;;;;;;;;;;;:27;10261:7;10242:27;;;;;;;;;;;;;;;:36;;;;10309:7;10293:32;;10302:5;10293:32;;;10318:6;10293:32;;;;;;:::i;:::-;;;;;;;;9962:370;;;:::o;7265:713::-;7418:1;7400:20;;:6;:20;;;;7392:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7501:1;7480:23;;:9;:23;;;;7472:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7554:47;7575:6;7583:9;7594:6;7554:20;:47::i;:::-;7612:21;7636:9;:17;7646:6;7636:17;;;;;;;;;;;;;;;;7612:41;;7688:6;7671:13;:23;;7663:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;7807:6;7791:13;:22;7771:9;:17;7781:6;7771:17;;;;;;;;;;;;;;;:42;;;;7857:6;7833:9;:20;7843:9;7833:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;7896:9;7879:35;;7888:6;7879:35;;;7907:6;7879:35;;;;;;:::i;:::-;;;;;;;;7925:46;7945:6;7953:9;7964:6;7925:19;:46::i;:::-;7265:713;;;;:::o;10916:121::-;;;;:::o;11625:120::-;;;;:::o;7:139:43:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;633:6;641;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;1055:6;1063;1071;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;1604:6;1612;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:364::-;2152:3;2180:39;2213:5;2180:39;:::i;:::-;2235:71;2299:6;2294:3;2235:71;:::i;:::-;2228:78;;2315:52;2360:6;2355:3;2348:4;2341:5;2337:16;2315:52;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2156:272;;;;;:::o;2434:366::-;2576:3;2597:67;2661:2;2656:3;2597:67;:::i;:::-;2590:74;;2673:93;2762:3;2673:93;:::i;:::-;2791:2;2786:3;2782:12;2775:19;;2580:220;;;:::o;2806:366::-;2948:3;2969:67;3033:2;3028:3;2969:67;:::i;:::-;2962:74;;3045:93;3134:3;3045:93;:::i;:::-;3163:2;3158:3;3154:12;3147:19;;2952:220;;;:::o;3178:366::-;3320:3;3341:67;3405:2;3400:3;3341:67;:::i;:::-;3334:74;;3417:93;3506:3;3417:93;:::i;:::-;3535:2;3530:3;3526:12;3519:19;;3324:220;;;:::o;3550:366::-;3692:3;3713:67;3777:2;3772:3;3713:67;:::i;:::-;3706:74;;3789:93;3878:3;3789:93;:::i;:::-;3907:2;3902:3;3898:12;3891:19;;3696:220;;;:::o;3922:366::-;4064:3;4085:67;4149:2;4144:3;4085:67;:::i;:::-;4078:74;;4161:93;4250:3;4161:93;:::i;:::-;4279:2;4274:3;4270:12;4263:19;;4068:220;;;:::o;4294:366::-;4436:3;4457:67;4521:2;4516:3;4457:67;:::i;:::-;4450:74;;4533:93;4622:3;4533:93;:::i;:::-;4651:2;4646:3;4642:12;4635:19;;4440:220;;;:::o;4666:366::-;4808:3;4829:67;4893:2;4888:3;4829:67;:::i;:::-;4822:74;;4905:93;4994:3;4905:93;:::i;:::-;5023:2;5018:3;5014:12;5007:19;;4812:220;;;:::o;5038:118::-;5125:24;5143:5;5125:24;:::i;:::-;5120:3;5113:37;5103:53;;:::o;5162:112::-;5245:22;5261:5;5245:22;:::i;:::-;5240:3;5233:35;5223:51;;:::o;5280:210::-;5367:4;5405:2;5394:9;5390:18;5382:26;;5418:65;5480:1;5469:9;5465:17;5456:6;5418:65;:::i;:::-;5372:118;;;;:::o;5496:313::-;5609:4;5647:2;5636:9;5632:18;5624:26;;5696:9;5690:4;5686:20;5682:1;5671:9;5667:17;5660:47;5724:78;5797:4;5788:6;5724:78;:::i;:::-;5716:86;;5614:195;;;;:::o;5815:419::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6068:9;6062:4;6058:20;6054:1;6043:9;6039:17;6032:47;6096:131;6222:4;6096:131;:::i;:::-;6088:139;;5986:248;;;:::o;6240:419::-;6406:4;6444:2;6433:9;6429:18;6421:26;;6493:9;6487:4;6483:20;6479:1;6468:9;6464:17;6457:47;6521:131;6647:4;6521:131;:::i;:::-;6513:139;;6411:248;;;:::o;6665:419::-;6831:4;6869:2;6858:9;6854:18;6846:26;;6918:9;6912:4;6908:20;6904:1;6893:9;6889:17;6882:47;6946:131;7072:4;6946:131;:::i;:::-;6938:139;;6836:248;;;:::o;7090:419::-;7256:4;7294:2;7283:9;7279:18;7271:26;;7343:9;7337:4;7333:20;7329:1;7318:9;7314:17;7307:47;7371:131;7497:4;7371:131;:::i;:::-;7363:139;;7261:248;;;:::o;7515:419::-;7681:4;7719:2;7708:9;7704:18;7696:26;;7768:9;7762:4;7758:20;7754:1;7743:9;7739:17;7732:47;7796:131;7922:4;7796:131;:::i;:::-;7788:139;;7686:248;;;:::o;7940:419::-;8106:4;8144:2;8133:9;8129:18;8121:26;;8193:9;8187:4;8183:20;8179:1;8168:9;8164:17;8157:47;8221:131;8347:4;8221:131;:::i;:::-;8213:139;;8111:248;;;:::o;8365:419::-;8531:4;8569:2;8558:9;8554:18;8546:26;;8618:9;8612:4;8608:20;8604:1;8593:9;8589:17;8582:47;8646:131;8772:4;8646:131;:::i;:::-;8638:139;;8536:248;;;:::o;8790:222::-;8883:4;8921:2;8910:9;8906:18;8898:26;;8934:71;9002:1;8991:9;8987:17;8978:6;8934:71;:::i;:::-;8888:124;;;;:::o;9018:214::-;9107:4;9145:2;9134:9;9130:18;9122:26;;9158:67;9222:1;9211:9;9207:17;9198:6;9158:67;:::i;:::-;9112:120;;;;:::o;9238:99::-;9290:6;9324:5;9318:12;9308:22;;9297:40;;;:::o;9343:169::-;9427:11;9461:6;9456:3;9449:19;9501:4;9496:3;9492:14;9477:29;;9439:73;;;;:::o;9518:305::-;9558:3;9577:20;9595:1;9577:20;:::i;:::-;9572:25;;9611:20;9629:1;9611:20;:::i;:::-;9606:25;;9765:1;9697:66;9693:74;9690:1;9687:81;9684:2;;;9771:18;;:::i;:::-;9684:2;9815:1;9812;9808:9;9801:16;;9562:261;;;;:::o;9829:848::-;9890:5;9897:4;9921:6;9912:15;;9945:5;9936:14;;9959:712;9980:1;9970:8;9967:15;9959:712;;;10075:4;10070:3;10066:14;10060:4;10057:24;10054:2;;;10084:18;;:::i;:::-;10054:2;10134:1;10124:8;10120:16;10117:2;;;10549:4;10542:5;10538:16;10529:25;;10117:2;10599:4;10593;10589:15;10581:23;;10629:32;10652:8;10629:32;:::i;:::-;10617:44;;9959:712;;;9902:775;;;;;;;:::o;10683:285::-;10743:5;10767:23;10785:4;10767:23;:::i;:::-;10759:31;;10811:27;10829:8;10811:27;:::i;:::-;10799:39;;10857:104;10894:66;10884:8;10878:4;10857:104;:::i;:::-;10848:113;;10749:219;;;;:::o;10974:1073::-;11028:5;11219:8;11209:2;;11240:1;11231:10;;11242:5;;11209:2;11268:4;11258:2;;11285:1;11276:10;;11287:5;;11258:2;11354:4;11402:1;11397:27;;;;11438:1;11433:191;;;;11347:277;;11397:27;11415:1;11406:10;;11417:5;;;11433:191;11478:3;11468:8;11465:17;11462:2;;;11485:18;;:::i;:::-;11462:2;11534:8;11531:1;11527:16;11518:25;;11569:3;11562:5;11559:14;11556:2;;;11576:18;;:::i;:::-;11556:2;11609:5;;;11347:277;;11733:2;11723:8;11720:16;11714:3;11708:4;11705:13;11701:36;11683:2;11673:8;11670:16;11665:2;11659:4;11656:12;11652:35;11636:111;11633:2;;;11789:8;11783:4;11779:19;11770:28;;11824:3;11817:5;11814:14;11811:2;;;11831:18;;:::i;:::-;11811:2;11864:5;;11633:2;11904:42;11942:3;11932:8;11926:4;11923:1;11904:42;:::i;:::-;11889:57;;;;11978:4;11973:3;11969:14;11962:5;11959:25;11956:2;;;11987:18;;:::i;:::-;11956:2;12036:4;12029:5;12025:16;12016:25;;11034:1013;;;;;;:::o;12053:348::-;12093:7;12116:20;12134:1;12116:20;:::i;:::-;12111:25;;12150:20;12168:1;12150:20;:::i;:::-;12145:25;;12338:1;12270:66;12266:74;12263:1;12260:81;12255:1;12248:9;12241:17;12237:105;12234:2;;;12345:18;;:::i;:::-;12234:2;12393:1;12390;12386:9;12375:20;;12101:300;;;;:::o;12407:96::-;12444:7;12473:24;12491:5;12473:24;:::i;:::-;12462:35;;12452:51;;;:::o;12509:90::-;12543:7;12586:5;12579:13;12572:21;12561:32;;12551:48;;;:::o;12605:126::-;12642:7;12682:42;12675:5;12671:54;12660:65;;12650:81;;;:::o;12737:77::-;12774:7;12803:5;12792:16;;12782:32;;;:::o;12820:86::-;12855:7;12895:4;12888:5;12884:16;12873:27;;12863:43;;;:::o;12912:307::-;12980:1;12990:113;13004:6;13001:1;12998:13;12990:113;;;13089:1;13084:3;13080:11;13074:18;13070:1;13065:3;13061:11;13054:39;13026:2;13023:1;13019:10;13014:15;;12990:113;;;13121:6;13118:1;13115:13;13112:2;;;13201:1;13192:6;13187:3;13183:16;13176:27;13112:2;12961:258;;;;:::o;13225:320::-;13269:6;13306:1;13300:4;13296:12;13286:22;;13353:1;13347:4;13343:12;13374:18;13364:2;;13430:4;13422:6;13418:17;13408:27;;13364:2;13492;13484:6;13481:14;13461:18;13458:38;13455:2;;;13511:18;;:::i;:::-;13455:2;13276:269;;;;:::o;13551:180::-;13599:77;13596:1;13589:88;13696:4;13693:1;13686:15;13720:4;13717:1;13710:15;13737:180;13785:77;13782:1;13775:88;13882:4;13879:1;13872:15;13906:4;13903:1;13896:15;13923:102;13964:6;14015:2;14011:7;14006:2;13999:5;13995:14;13991:28;13981:38;;13971:54;;;:::o;14031:102::-;14073:8;14120:5;14117:1;14113:13;14092:34;;14082:51;;;:::o;14139:222::-;14279:34;14275:1;14267:6;14263:14;14256:58;14348:5;14343:2;14335:6;14331:15;14324:30;14245:116;:::o;14367:221::-;14507:34;14503:1;14495:6;14491:14;14484:58;14576:4;14571:2;14563:6;14559:15;14552:29;14473:115;:::o;14594:225::-;14734:34;14730:1;14722:6;14718:14;14711:58;14803:8;14798:2;14790:6;14786:15;14779:33;14700:119;:::o;14825:227::-;14965:34;14961:1;14953:6;14949:14;14942:58;15034:10;15029:2;15021:6;15017:15;15010:35;14931:121;:::o;15058:224::-;15198:34;15194:1;15186:6;15182:14;15175:58;15267:7;15262:2;15254:6;15250:15;15243:32;15164:118;:::o;15288:223::-;15428:34;15424:1;15416:6;15412:14;15405:58;15497:6;15492:2;15484:6;15480:15;15473:31;15394:117;:::o;15517:224::-;15657:34;15653:1;15645:6;15641:14;15634:58;15726:7;15721:2;15713:6;15709:15;15702:32;15623:118;:::o;15747:122::-;15820:24;15838:5;15820:24;:::i;:::-;15813:5;15810:35;15800:2;;15859:1;15856;15849:12;15800:2;15790:79;:::o;15875:122::-;15948:24;15966:5;15948:24;:::i;:::-;15941:5;15938:35;15928:2;;15987:1;15984;15977:12;15928:2;15918:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\n\ncontract USDT is ERC20 {\n    // modify token name\n    string public constant NAME = \"USDT TEST\";\n    // modify token symbol\n    string public constant SYMBOL = \"USDT\";\n    // modify token decimals\n    uint8 public constant DECIMALS = 18;\n    // modify MILLION\n    uint256 public constant MILLION = 10**6 * (10 ** uint256(DECIMALS));\n    // modify initial token supply\n    uint256 public constant INITIAL_SUPPLY = 100 * MILLION; \n\n    constructor() ERC20(NAME, SYMBOL) {\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\n}",
  "sourcePath": "/Users/yxf/app/uniarts-eth-dao/contracts/ERC20/USDT.sol",
  "ast": {
    "absolutePath": "/Users/yxf/app/uniarts-eth-dao/contracts/ERC20/USDT.sol",
    "exportedSymbols": {
      "Context": [
        14047
      ],
      "ERC20": [
        12360
      ],
      "IERC20": [
        12438
      ],
      "IERC20Metadata": [
        12500
      ],
      "USDT": [
        92
      ]
    },
    "id": 93,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 47,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 48,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 12361,
        "src": "57:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12360,
              "src": "131:5:1"
            },
            "id": 50,
            "nodeType": "InheritanceSpecifier",
            "src": "131:5:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 92,
        "linearizedBaseContracts": [
          92,
          12360,
          12500,
          12438,
          14047
        ],
        "name": "USDT",
        "nameLocation": "123:4:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "a3f4df7e",
            "id": 53,
            "mutability": "constant",
            "name": "NAME",
            "nameLocation": "191:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "168:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 51,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "168:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "555344542054455354",
              "id": 52,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "198:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2239af4d752c5603d5a6bd7ac73e0f25a3d18ee976c4e20d0ec0ada249fd5f2c",
                "typeString": "literal_string \"USDT TEST\""
              },
              "value": "USDT TEST"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f76f8d78",
            "id": 56,
            "mutability": "constant",
            "name": "SYMBOL",
            "nameLocation": "265:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "242:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 54,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "242:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "55534454",
              "id": 55,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "274:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
                "typeString": "literal_string \"USDT\""
              },
              "value": "USDT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2e0f2625",
            "id": 59,
            "mutability": "constant",
            "name": "DECIMALS",
            "nameLocation": "337:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "315:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 57,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "315:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 58,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "348:2:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "32bc934c",
            "id": 72,
            "mutability": "constant",
            "name": "MILLION",
            "nameLocation": "402:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "378:67:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 60,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "378:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 71,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                },
                "id": 63,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 61,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "412:2:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "36",
                  "id": 62,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "416:1:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  "value": "6"
                },
                "src": "412:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "421:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 67,
                          "name": "DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "435:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "427:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 65,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "427:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "421:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 70,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "420:25:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "412:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2ff2e9dc",
            "id": 77,
            "mutability": "constant",
            "name": "INITIAL_SUPPLY",
            "nameLocation": "510:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "486:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "486:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 76,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "313030",
                "id": 74,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "527:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "100"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "id": 75,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 72,
                "src": "533:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "527:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "582:50:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 85,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "598:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "598:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "610:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 84,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12220,
                      "src": "592:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "592:33:1"
                }
              ]
            },
            "id": 91,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 80,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53,
                    "src": "568:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 81,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56,
                    "src": "574:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 82,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 79,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12360,
                  "src": "562:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "562:19:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:2:1"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:1"
            },
            "scope": 92,
            "src": "548:84:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 93,
        "src": "114:520:1",
        "usedErrors": []
      }
    ],
    "src": "32:602:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/yxf/app/uniarts-eth-dao/contracts/ERC20/USDT.sol",
    "exportedSymbols": {
      "Context": [
        14047
      ],
      "ERC20": [
        12360
      ],
      "IERC20": [
        12438
      ],
      "IERC20Metadata": [
        12500
      ],
      "USDT": [
        92
      ]
    },
    "id": 93,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 47,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 48,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 93,
        "sourceUnit": 12361,
        "src": "57:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12360,
              "src": "131:5:1"
            },
            "id": 50,
            "nodeType": "InheritanceSpecifier",
            "src": "131:5:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 92,
        "linearizedBaseContracts": [
          92,
          12360,
          12500,
          12438,
          14047
        ],
        "name": "USDT",
        "nameLocation": "123:4:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "a3f4df7e",
            "id": 53,
            "mutability": "constant",
            "name": "NAME",
            "nameLocation": "191:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "168:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 51,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "168:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "555344542054455354",
              "id": 52,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "198:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2239af4d752c5603d5a6bd7ac73e0f25a3d18ee976c4e20d0ec0ada249fd5f2c",
                "typeString": "literal_string \"USDT TEST\""
              },
              "value": "USDT TEST"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "f76f8d78",
            "id": 56,
            "mutability": "constant",
            "name": "SYMBOL",
            "nameLocation": "265:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "242:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 54,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "242:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "55534454",
              "id": 55,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "274:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
                "typeString": "literal_string \"USDT\""
              },
              "value": "USDT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2e0f2625",
            "id": 59,
            "mutability": "constant",
            "name": "DECIMALS",
            "nameLocation": "337:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "315:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 57,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "315:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 58,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "348:2:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "32bc934c",
            "id": 72,
            "mutability": "constant",
            "name": "MILLION",
            "nameLocation": "402:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "378:67:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 60,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "378:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 71,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                },
                "id": 63,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 61,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "412:2:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "36",
                  "id": 62,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "416:1:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  "value": "6"
                },
                "src": "412:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "421:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 67,
                          "name": "DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "435:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "427:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 65,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "427:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "421:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 70,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "420:25:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "412:33:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2ff2e9dc",
            "id": 77,
            "mutability": "constant",
            "name": "INITIAL_SUPPLY",
            "nameLocation": "510:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 92,
            "src": "486:54:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 73,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "486:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 76,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "313030",
                "id": 74,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "527:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "100"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "id": 75,
                "name": "MILLION",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 72,
                "src": "533:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "527:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "582:50:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 85,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "598:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "598:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87,
                        "name": "INITIAL_SUPPLY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "610:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 84,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12220,
                      "src": "592:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "592:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "592:33:1"
                }
              ]
            },
            "id": 91,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 80,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53,
                    "src": "568:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 81,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56,
                    "src": "574:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 82,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 79,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12360,
                  "src": "562:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "562:19:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:2:1"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:0:1"
            },
            "scope": 92,
            "src": "548:84:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 93,
        "src": "114:520:1",
        "usedErrors": []
      }
    ],
    "src": "32:602:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9070eE18704eA2419C0e117c484Cc4157f4c2128",
      "transactionHash": "0x78fe018e3ff0cb0c3f37f334e514c80831b5dc1b2ecde6ca895f0edef410bce1"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-08-27T01:56:55.043Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}